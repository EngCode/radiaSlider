{"version":3,"sources":["../src/slider-circular.js","../src/slider-linear.js","../index.js","linear.js"],"names":["Slider","options","sliders","scaleWidth","fillWidth","knobWidth","startAngle","Math","PI","endAngle","continuousMode","container","document","getElementById","canvasId","the_body","body","context","getContext","x0","undefined","width","y0","height","MouseX","MouseY","selectedSlider","currentSlider","rotationEventListener","_rotation","bind","addEventListener","_handleMouseDown","_handleMouseUp","_handleClick","_handleTouch","_handleMove","_handleEnd","id","color","min","max","radius","onValueChangeCallback","changed","v","ang_degrees","normalizedValue","step","obj","setSliderValue","value","slider","radToDeg","normalizeTan","drawAll","key","clearRect","hasOwnProperty","drawScale","drawData","drawArrow","drawKnob","drawCenterDot","i","beginPath","strokeStyle","arc","lineWidth","stroke","fillStyle","fill","moveTo","lineTo","cos","sin","x","y","atan2","rect","getBoundingClientRect","event","touches","clientX","left","clientY","top","calculateUserCursor","hip","sqrt","pow","abs","preventDefault","getSelectedSlider","removeEventListener","calculateAngles","ang","module","exports","window","vertical","fix_x","x1","y1","fix_y","w","val","nomval","xx","yy","calculateValues","circular","require","linear","colors","temp","slider0","slider1","slider2","slider3","karandashi","randomInRange","start","end","floor","random","initSliders","t","addSlider","initKarandashi","toString"],"mappings":"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","file":"linear.map","sourceRoot":"../example","sourcesContent":["(function () {\n    class Slider {\n        constructor(options) {\n            this.sliders = {};\n            this.scaleWidth = 35;\n            this.fillWidth = 35;\n            this.knobWidth = 35;\n\n            this.startAngle = 1.5 * Math.PI + 0.000001;\n            this.endAngle = 1.5 * Math.PI - 0.000001;\n\n            this.continuousMode = options.continuousMode || false;\n\n            this.container = document.getElementById(options.canvasId);\n            this.the_body = document.body;\n            this.context = this.container.getContext('2d');\n\n            this.x0 = options.x0 === undefined ? this.container.width / 2 : options.x0;\n            this.y0 = options.y0 === undefined ? this.container.height / 2 : options.y0;\n\n            this.MouseX = 0;\n            this.MouseY = 0;\n\n            this.selectedSlider = null;\n            this.currentSlider = null;\n\n            this.rotationEventListener = this._rotation.bind(this);\n            this.container.addEventListener('mousedown', this._handleMouseDown.bind(this), false);\n            this.the_body.addEventListener('mouseup', this._handleMouseUp.bind(this), false);\n            this.container.addEventListener('click', this._handleClick.bind(this), false);\n\n\n            this.container.addEventListener('touchstart', this._handleTouch.bind(this), false);\n            this.container.addEventListener('touchmove', this._handleMove.bind(this), false);\n            this.container.addEventListener('touchend', this._handleEnd.bind(this), false);\n        }\n\n        // Adds a slider band to the slider\n        addSlider(options) {\n            this.sliders[options.id] = {\n                id: options.id,\n                container: document.getElementById(options.container),\n                color: options.color || '#104b63',\n                min: options.min || 0,\n                max: options.max || 100,\n                radius: options.radius || 100,\n                startAngle: this.startAngle,\n                endAngle: this.endAngle,\n                onValueChangeCallback: options.changed || function (v) {},\n                ang_degrees: 0,\n                normalizedValue: options.min || 0,\n                step: options.step || 1\n            };\n\n            const obj = this.sliders[options.id];\n            this.setSliderValue(obj.id, options.min);\n        }\n\n        // Sets (draws) slider band value given the band id and value\n        setSliderValue(id, value) {\n            const slider = this.sliders[id];\n            if (value <= slider.min) {\n                slider.endAngle = this.startAngle;\n                slider.ang_degrees = 0;\n                slider.normalizedValue = 0;\n            } else if (value >= slider.max) {\n                slider.endAngle = this.endAngle;\n                slider.ang_degrees = 360;\n                slider.normalizedValue = slider.max;\n            } else {\n                //value = (value / slider.step >> 0) * slider.step;\n                slider.endAngle = 2 * Math.PI * (value - slider.min) / (slider.max - slider.min) - Math.PI / 2;\n                slider.ang_degrees = Slider.radToDeg(Slider.normalizeTan(slider.endAngle));\n                slider.normalizedValue = value;\n            }\n\n            this.drawAll();\n        }\n\n        // Redraws everything\n        drawAll() {\n            this.context.clearRect(0, 0, this.container.width, this.container.height);\n            for (let key in this.sliders) {\n                if (!this.sliders.hasOwnProperty(key)) continue;\n                const obj = this.sliders[key];\n                this.drawScale(obj);\n                this.drawData(obj);\n                this.drawArrow(obj);\n                this.drawKnob(obj);\n                obj.onValueChangeCallback({'rad': obj.endAngle, 'deg': obj.ang_degrees, 'value': obj.normalizedValue});\n            }\n            this.drawCenterDot();\n        }\n\n        // Draw the scale for a selected slider band\n        drawScale(slider) {\n            // Scale\n            for (let i = 0; i <= 2 * Math.PI; i += Math.PI / 6) {\n                this.context.beginPath();\n                this.context.strokeStyle = '#eeeeee';\n                this.context.arc(this.x0, this.y0, slider.radius, i, i + Math.PI / 4, false);\n                this.context.lineWidth = this.scaleWidth;\n                this.context.stroke();\n            }\n        }\n\n        // Draw dot in the center\n        drawCenterDot () {\n            this.context.beginPath();\n            this.context.strokeStyle = '#eeeeee';\n            this.context.arc(this.x0, this.y0, this.scaleWidth/2, 0, Math.PI*2, false);\n            this.context.lineWidth = 1;\n            this.context.fillStyle = '#eeeeee';\n            this.context.fill();\n        }\n\n        // Draw the data on the selected slider band\n        drawData(slider) {\n            this.context.beginPath();\n            this.context.strokeStyle = slider.color;\n            this.context.arc(this.x0, this.y0, slider.radius, slider.startAngle, slider.endAngle, false);\n            this.context.lineWidth = this.fillWidth;\n            this.context.stroke();\n        }\n\n        // Draw tail arrow\n        drawArrow(slider) {\n            this.context.beginPath();\n            this.context.moveTo(this.x0, this.y0 - slider.radius + this.scaleWidth / 2);\n            this.context.lineTo(this.x0, this.y0 - this.scaleWidth - slider.radius + this.scaleWidth / 2);\n            this.context.lineTo(this.x0 + this.scaleWidth / 4, this.y0 - this.scaleWidth / 2 - slider.radius + this.scaleWidth / 2);\n            this.context.fillStyle = \"#eeeeee\";\n            this.context.fill();\n        }\n\n        // Draw the knob (control element)\n        drawKnob(slider) {\n            // Knob\n            this.context.beginPath();\n            this.context.strokeStyle = '#eb879c';\n            this.context.arc(\n                Math.cos(slider.endAngle) * slider.radius + this.x0,\n                Math.sin(slider.endAngle) * slider.radius + this.y0,\n                this.knobWidth / 2,\n                0, Math.PI * 2, false\n            );\n            this.context.lineWidth = 1;\n\n            this.context.fillStyle = '#eb879c';\n            this.context.fill();\n\n            // Dot on the knob\n            this.context.beginPath();\n            this.context.strokeStyle = 'yellow';\n            this.context.arc(\n                Math.cos(slider.endAngle) * slider.radius + this.x0,\n                Math.sin(slider.endAngle) * slider.radius + this.y0,\n                this.scaleWidth / 10,\n                0, Math.PI * 2, false\n            );\n            this.context.lineWidth = 1;\n            this.context.fillStyle = 'yellow';\n            this.context.fill();\n        }\n\n        // Calculate angles given the cursor position\n        calculateAngles(x, y) {\n            if (!this.selectedSlider) return;\n\n            let max = this.selectedSlider.max,\n                min = this.selectedSlider.min,\n                step = this.selectedSlider.step,\n                endAngle = Math.atan2(y - this.y0, x - this.x0),\n                ang_degrees = Slider.radToDeg(Slider.normalizeTan(endAngle)),\n                normalizedValue = Slider.normalizeTan(endAngle) * (max - min) / (2 * Math.PI) + min;\n\n            normalizedValue = (normalizedValue / step >> 0) * step;\n\n            this.selectedSlider.endAngle = endAngle;\n            this.selectedSlider.ang_degrees = ang_degrees;\n            this.selectedSlider.normalizedValue = normalizedValue;\n        }\n\n        // Helper method\n        static radToDeg(ang) {\n            return ang * 180 / Math.PI;\n        }\n\n        // Normalizes tangent\n        static normalizeTan(ang) {\n            return ang + Math.PI / 2 > 0 ? ang + Math.PI / 2 : (2 * Math.PI + ang + Math.PI / 2);\n        }\n\n        // Calculates cursor coordinates\n        calculateUserCursor() {\n            const rect = this.container.getBoundingClientRect();\n\n            if (event.touches) {\n                this.MouseX = event.touches[0].clientX - rect.left;\n                this.MouseY = event.touches[0].clientY - rect.top;\n            } else {\n                this.MouseX = event.clientX - rect.left;\n                this.MouseY = event.clientY - rect.top;\n            }\n        }\n\n\n        // Returns a slider band based on the cursor position\n        getSelectedSlider() {\n            this.calculateUserCursor();\n            const hip = Math.sqrt(Math.pow(this.MouseX - this.x0, 2) + Math.pow(this.MouseY - this.y0, 2));\n            let selectedSlider;\n\n            for (let key in this.sliders) {\n                if (!this.sliders.hasOwnProperty(key)) continue;\n                const obj = this.sliders[key];\n                if (Math.abs(hip - obj.radius) <= this.scaleWidth / 2) {\n                    selectedSlider = obj;\n                    break;\n                }\n            }\n            return selectedSlider ? selectedSlider : null;\n        }\n\n\n        // Event handlers (mousedown, mouseup, mousemove, mouseclick, touches)\n        _handleMouseDown(event) {\n            event.preventDefault();\n            this.selectedSlider = this.getSelectedSlider();\n            if (!this.selectedSlider) return;\n            this.the_body.addEventListener('mousemove', this.rotationEventListener, false);\n        }\n\n        _handleMouseUp(event) {\n            event.preventDefault();\n            this.the_body.removeEventListener('mousemove', this.rotationEventListener, false);\n            this.currentSlider = this.selectedSlider;\n        }\n\n        _handleClick(event) {\n            this.selectedSlider = this.getSelectedSlider();\n            if (this.currentSlider && this.getSelectedSlider() && this.currentSlider.id !== this.getSelectedSlider().id) return;\n            if (this.selectedSlider) this._rotation();\n        }\n\n        _handleTouch(event) {\n            event.preventDefault();\n            this.selectedSlider = this.getSelectedSlider();\n            if (this.selectedSlider) this._rotation();\n        }\n\n        _handleMove(event) {\n            event.preventDefault();\n            if (this.continuousMode) this._rotation();\n            else if (this.selectedSlider) this._rotation();\n        }\n\n        _handleEnd(event) {\n            event.preventDefault();\n            this.the_body.removeEventListener('mousemove', this.rotationEventListener, false);\n        }\n\n        // Rotation wrapper\n        _rotation() {\n            this.calculateUserCursor();\n            if (this.continuousMode) this.selectedSlider = this.getSelectedSlider();\n            this.calculateAngles(this.MouseX, this.MouseY);\n            this.drawAll();\n        }\n    }\n\n\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined')\n        module.exports = Slider;\n    else window.Slider = Slider;\n})();","(function () {\n    class Slider {\n        constructor(options) {\n            this.sliders = {};\n            this.scaleWidth = 35;\n            this.fillWidth = 35;\n            this.knobWidth = 35;\n\n            this.continuousMode = options.continuousMode || false;\n            this.vertical = options.vertical || false;\n\n            this.container = document.getElementById(options.canvasId);\n            this.the_body = document.body;\n            this.context = this.container.getContext('2d');\n\n            this.MouseX = 0;\n            this.MouseY = 0;\n\n            this.selectedSlider = null;\n            this.currentSlider = null;\n\n            this.rotationEventListener = this._rotation.bind(this);\n            this.container.addEventListener('mousedown', this._handleMouseDown.bind(this), false);\n            this.the_body.addEventListener('mouseup', this._handleMouseUp.bind(this), false);\n            this.container.addEventListener('click', this._handleClick.bind(this), false);\n\n\n            this.container.addEventListener('touchstart', this._handleTouch.bind(this), false);\n            this.container.addEventListener('touchmove', this._handleMove.bind(this), false);\n            this.container.addEventListener('touchend', this._handleEnd.bind(this), false);\n        }\n\n        // Adds a slider band to the slider\n        addSlider(options) {\n            this.sliders[options.id] = {\n                id: options.id,\n                container: document.getElementById(options.container),\n                color: options.color || '#104b63',\n                width: options.width || 100,\n                min: options.min || 0,\n                max: options.max || 100,\n                step: options.step || 1,\n                x0: options.x0 || 0,\n                y0: options.y0 || 0,\n                onValueChangeCallback: options.changed || function (v) {},\n                value: 0,\n                normalizedValue: options.min || 0\n            };\n\n            const obj = this.sliders[options.id];\n            this.setSliderValue(obj.id, options.min);\n        }\n\n        // Sets (draws) slider band value given the band id and value\n        setSliderValue(id, value) {\n            const slider = this.sliders[id];\n            if (value <= slider.min) {\n                slider.value = 0;\n                slider.normalizedValue = slider.min;\n            } else if (value >= slider.max) {\n                slider.value = slider.width;\n                slider.normalizedValue = slider.max;\n            } else {\n                slider.value = slider.width * (value - slider.min) / (slider.max - slider.min);\n                slider.normalizedValue = value;\n            }\n            this.drawAll();\n        }\n\n        // Redraws everything\n        drawAll() {\n            this.context.clearRect(0, 0, this.container.width, this.container.height);\n            for (let key in this.sliders) {\n                if (!this.sliders.hasOwnProperty(key)) continue;\n                const obj = this.sliders[key];\n                this.drawScale(obj);\n                this.drawData(obj);\n                this.drawKnob(obj);\n                obj.onValueChangeCallback({'width': obj.value, 'value': obj.normalizedValue});\n            }\n        }\n\n        // Draw the scale for a selected slider band\n        drawScale(slider) {\n            let fix_x = this.vertical ? 0 : 1;\n            let fix_y = this.vertical ? 1 : 0;\n\n            // first rounded edge\n            this.context.beginPath();\n            this.context.strokeStyle = slider.color;\n            this.context.arc(slider.x0 + fix_x, slider.y0 - fix_y, this.scaleWidth/2, 0, Math.PI*2, false);\n            this.context.lineWidth = 1;\n            this.context.fillStyle = slider.color;\n            this.context.fill();\n\n            let x1, y1;\n            if (this.vertical) {\n                x1 = slider.x0;\n                y1 = slider.y0 - slider.width;\n            }\n            else {\n                x1 = slider.x0 + slider.width;\n                y1 = slider.y0;\n            }\n            // Scale\n            this.context.beginPath();\n            this.context.strokeStyle = '#eeeeee';\n            this.context.moveTo(slider.x0, slider.y0);\n            this.context.lineTo(x1, y1);\n            this.context.lineWidth = this.scaleWidth;\n            this.context.stroke();\n\n\n            // second rounded edge\n            this.context.strokeStyle = '#eeeeee';\n            this.context.arc(x1, y1, this.scaleWidth/2, 0, Math.PI*2, false);\n            this.context.lineWidth = 1;\n            this.context.fillStyle = '#eeeeee';\n            this.context.fill();\n        }\n\n        // Draw the data on the selected slider band\n        drawData(slider) {\n            let x1, y1;\n            if (this.vertical) {\n                x1 = slider.x0;\n                y1 = slider.y0 - slider.value;\n            }\n            else {\n                x1 = slider.x0 + slider.value;\n                y1 = slider.y0;\n            }\n\n            this.context.beginPath();\n            this.context.strokeStyle = slider.color;\n            this.context.moveTo(slider.x0, slider.y0);\n            this.context.lineTo(x1, y1);\n            this.context.lineWidth = this.fillWidth;\n            this.context.stroke();\n        }\n\n        // Draw the knob (control element)\n        drawKnob(slider) {\n            // Knob\n            let x1, y1;\n            if (this.vertical) {\n                x1 = slider.x0;\n                y1 = slider.y0 - slider.value;\n            }\n            else {\n                x1 = slider.x0 + slider.value;\n                y1 = slider.y0;\n            }\n\n            this.context.beginPath();\n            this.context.strokeStyle = '#eb879c';\n            this.context.arc(\n                x1,\n                y1,\n                this.knobWidth / 2,\n                0, Math.PI * 2, false\n            );\n            this.context.lineWidth = 1;\n\n            this.context.fillStyle = '#eb879c';\n            this.context.fill();\n\n            // Dot on the knob\n            this.context.beginPath();\n            this.context.strokeStyle = 'yellow';\n            this.context.arc(\n                x1,\n                y1,\n                this.scaleWidth / 10,\n                0, Math.PI * 2, false\n            );\n            this.context.lineWidth = 1;\n            this.context.fillStyle = 'yellow';\n            this.context.fill();\n        }\n\n        // Calculate angles given the cursor position\n        calculateValues(x, y) {\n            if (!this.selectedSlider) return;\n\n            let max = this.selectedSlider.max,\n                min = this.selectedSlider.min,\n                step = this.selectedSlider.step,\n                w = this.selectedSlider.width;\n\n            let x1;\n            x1 = this.vertical ? this.selectedSlider.y0 - y : x - this.selectedSlider.x0;\n\n\n            let val = x1;\n            if (val > this.selectedSlider.width - this.selectedSlider.step) val = this.selectedSlider.width;\n            if (val < 0 + this.selectedSlider.step) val = 0;\n\n            let nomval = (val * (max - min)) / (w) + min;\n            nomval = (nomval / step >> 0) * step;\n            this.selectedSlider.value = val;\n            this.selectedSlider.normalizedValue = nomval;\n        }\n\n        // Calculates cursor coordinates\n        calculateUserCursor() {\n            let rect = this.container.getBoundingClientRect();\n\n            if (event.touches) {\n                this.MouseX = event.touches[0].clientX - rect.left;\n                this.MouseY = event.touches[0].clientY - rect.top;\n            } else {\n                this.MouseX = event.clientX - rect.left;\n                this.MouseY = event.clientY - rect.top;\n            }\n        }\n\n\n        // Returns a slider band based on the cursor position\n        getSelectedSlider() {\n            this.calculateUserCursor();\n            let selectedSlider;\n\n            for (let key in this.sliders) {\n                if (!this.sliders.hasOwnProperty(key)) continue;\n                let obj = this.sliders[key];\n                let xx;\n                let yy;\n                if (this.vertical) {\n                    xx = this.MouseX >= obj.x0 - this.scaleWidth / 2 && this.MouseX <= obj.x0 + this.scaleWidth / 2;\n                    yy = this.MouseY >= obj.y0 - obj.width - this.scaleWidth / 2 && this.MouseY <= obj.y0 + this.scaleWidth / 2;\n                } else {\n                    xx = this.MouseX >= obj.x0 - this.scaleWidth / 2 && this.MouseX <= obj.x0 + obj.width + this.scaleWidth / 2;\n                    yy = this.MouseY >= obj.y0 - this.scaleWidth / 2 && this.MouseY <= obj.y0 + this.scaleWidth / 2;\n                }\n\n                if (xx && yy) {\n                    selectedSlider = obj;\n                    break;\n                }\n            }\n\n            return selectedSlider ? selectedSlider : null;\n        }\n\n\n        // Event handlers (mousedown, mouseup, mousemove, mouseclick, touches)\n        _handleMouseDown(event) {\n            event.preventDefault();\n            this.selectedSlider = this.getSelectedSlider();\n            if (!this.selectedSlider) return;\n            this.the_body.addEventListener('mousemove', this.rotationEventListener, false);\n        }\n\n        _handleMouseUp(event) {\n            event.preventDefault();\n            this.the_body.removeEventListener('mousemove', this.rotationEventListener, false);\n            this.currentSlider = this.selectedSlider;\n        }\n\n        _handleClick(event) {\n            this.selectedSlider = this.getSelectedSlider();\n            if (this.currentSlider && this.getSelectedSlider() && this.currentSlider.id !== this.getSelectedSlider().id) return;\n            if (this.selectedSlider) this._rotation();\n        }\n\n        _handleTouch(event) {\n            event.preventDefault();\n            this.selectedSlider = this.getSelectedSlider();\n            if (this.selectedSlider) this._rotation();\n        }\n\n        _handleMove(event) {\n            event.preventDefault();\n            if (this.continuousMode) this._rotation();\n            else if (this.selectedSlider) this._rotation();\n        }\n\n        _handleEnd(event) {\n            event.preventDefault();\n            this.the_body.removeEventListener('mousemove', this.rotationEventListener, false);\n        }\n\n        // Rotation wrapper\n        _rotation() {\n            this.calculateUserCursor();\n            if (this.continuousMode) this.selectedSlider = this.getSelectedSlider();\n            this.calculateValues(this.MouseX, this.MouseY);\n            this.drawAll();\n        }\n    }\n\n\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined')\n        module.exports = Slider;\n    else window.Slider = Slider;\n})();","const circular = require(\"./src/slider-circular\");\nconst linear = require(\"./src/slider-linear\");\n\n\nmodule.exports = {\n    circular: circular,\n    linear: linear\n};","import { linear as Slider } from \"../index\"\n\nvar colors = [\n    \"#104b63\",\n    \"#ff9a9a\",\n    \"#76c7e9\",\n    \"#ffff9a\",\n    \"#9e9e9e\",\n    \"#bcf5bc\",\n    \"#f096f0\",\n    \"#229ed1\"\n];\n\nvar temp = {\n    min: -100,\n    max: 100,\n    step: 10\n};\n\nvar slider0 = new Slider({ canvasId: \"myCanvas0\", continuousMode: true,  vertical: false });\nvar slider1 = new Slider({ canvasId: \"myCanvas1\", continuousMode: false, vertical: false });\nvar slider2 = new Slider({ canvasId: \"myCanvas2\", continuousMode: true,  vertical: true });\nvar slider3 = new Slider({ canvasId: \"myCanvas3\", continuousMode: false, vertical: true });\nvar karandashi = new Slider({ canvasId: \"karandashi\", continuousMode: true, vertical: true });\n\ninitSliders();\ninitKarandashi();\n\nfunction randomInRange(start,end){\n    return Math.floor(Math.random() * (end - start + 1) + start);\n}\n\nfunction initSliders() {\n    for (var i=0; i<=6; i++) {\n        //horizontal sliders\n        var t = temp;\n        t.width = 260;\n        t.color = colors[i];\n        t.x0 = 30;\n        t.y0 = 30 + 40*i;\n        t.id = i;\n        slider0.addSlider(t);\n        slider0.setSliderValue(i, randomInRange(-100,100));\n\n        slider1.addSlider(t);\n        slider1.setSliderValue(i, randomInRange(-100,100));\n\n        //vertical sliders\n        t.width = 210;\n        t.x0 = 40 + 40*i;\n        t.y0 = 240;\n        slider2.addSlider(t);\n        slider2.setSliderValue(i, randomInRange(-100,100));\n\n        slider3.addSlider(t);\n        slider3.setSliderValue(i, randomInRange(-100,100));\n    }\n}\n\nfunction initKarandashi() {\n    for (var i=0; i<24; i++) {\n        var t = temp;\n        t.width = 340;\n        t.color = colors[i%8];\n        t.x0 = 30 + 40*i;\n        t.y0 = 370;\n        t.id = i.toString();\n        karandashi.addSlider(t);\n        karandashi.setSliderValue(t.id, randomInRange(temp.min, temp.max));\n    }\n}"]}